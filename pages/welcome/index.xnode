<content:page class="front">
	<content:heading>Welcome to Utopia...</content:heading>
	
	<section class="features">
		<div>
			<i class="fa fa-bolt"></i>
			<h2>Low latency and high throughput</h2>
			<p>Utopia has been carefully tuned for low-latency and algorithmic efficiency. During development, requests reload the entire stack, while in production everything is cached using <a href="http://ruby-concurrency.github.io/concurrent-ruby/Concurrent/Map.html">thread-safe data-structures</a>. Serve thousands of requests per second with ease.</p>
		</div>
		
		<div>
			<i class="fa fa-cubes"></i>
			<h2>Modular code and structure</h2>
			<p>Utopia provides independently useful <a href="https://github.com/rack/rack">Rack</a> middleware and has been designed with simplicify in mind. Several fully-featured webapps and a ton of commercial websites have guided the development of the Utopia stack. It is capable of handling a diverse range of requirements.</p>
		</div>
		
		<div>
			<i class="fa fa-code"></i>
			<h2>Well tested and maintained</h2>
			<p>Utopia comprises a <a href="https://github.com/ioquatix/utopia">core gem</a> and several supporting libraries, the main ones being <a href="https://github.com/ioquatix/trenni">trenni</a> for templates and parsing, and <a href="https://github.com/ioquatix/http-accept">http-accept</a> for HTTP header processing. Together, these gems have over 90% test coverage.</p>
		</div>
		
		<div>
			<i class="fa fa-server"></i>
			<h2>Batteries included</h2>
			<p>Utopia includes both a recommended development model and a server deployment model out of the box. This is exposed via the <code>utopia</code> command. We recommend use of <a href="https://www.nginx.com">Nginx</a> and <a href="https://www.phusionpassenger.com">Passenger</a> for server side deployment.</p>
		</div>
		
		<div>
			<i class="fa fa-globe"></i>
			<h2>Standards compliant localization</h2>
			<p>Utopia supports the <code>Accept-Language</code> header and transparently selects the correct view to render. Build multi-lingual websites and webapps easily: translate content incrementally as required, or not at all.</p>
		</div>
	</section>
</content:page>